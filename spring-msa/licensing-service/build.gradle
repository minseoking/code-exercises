plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id 'com.palantir.docker' version '0.35.0'
}

group = 'com.example'
version = '0.0.1'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2022.0.3")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
//    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    runtimeOnly 'com.h2database:h2'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

docker {
    println("gradle docker-plugin start = spring-msa:${project.version}")
    println("${tasks.bootJar.outputs.files.singleFile.name}")
    name "spring-msa-${project.version}"
    files tasks.bootJar.outputs.files
    tag 'DockerHub', "minseoklee98/spring-msa-${project.version}"
    buildArgs(['JAR_FILE': tasks.bootJar.outputs.files.singleFile.name])
}
